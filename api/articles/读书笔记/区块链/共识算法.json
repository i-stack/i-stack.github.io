{"title":"共识算法","slug":"读书笔记/区块链/共识算法","date":"2022-01-03T01:49:04.000Z","updated":"2023-06-02T03:43:12.150Z","comments":false,"path":"api/articles/读书笔记/区块链/共识算法.json","excerpt":null,"covers":null,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"什么是共识算法\"><a href=\"#什么是共识算法\" class=\"headerlink\" title=\"什么是共识算法\"></a>什么是共识算法</h2><p>共识算法是在分布式系统中用于解决一致性问题的算法。在分布式系统中，多个节点协同工作以完成某个任务，但由于网络延迟、节点故障等原因，节点之间可能会出现数据不一致的情况。共识算法的目标是使得所有节点能够就某个数值或者状态达成一致意见。</p>\n<p>所谓共识，简单理解就是指大家都达成一致的意思。比如：开会讨论，双方或多方签订一份合作协议等。假设一群人开会，大家各抒己见，如何才能统一决定呢？一般在某一时间段就会选出一个人做汇总，然后发布完整的意见，这个时候所有参会的人投票表决，每个人都有机会来做汇总发表，最后谁的支持者多就以谁的最终意见为准。</p>\n<p>上面这种思路适合人数少的情况，如果有一百人、一千人、一万人参加会议，就很难通过这种方式投票决定了，效率太低。这时就需要通过一种机制筛选出最有代表性的人，在共识算法中就是筛选出具有代表性的节点。这种筛选条件就是共识算法。</p>\n<h2 id=\"常见的共识算法\"><a href=\"#常见的共识算法\" class=\"headerlink\" title=\"常见的共识算法\"></a>常见的共识算法</h2><h3 id=\"工作量证明（Proof-of-Work，PoW）\"><a href=\"#工作量证明（Proof-of-Work，PoW）\" class=\"headerlink\" title=\"工作量证明（Proof of Work，PoW）\"></a>工作量证明（Proof of Work，PoW）</h3><p>最早由比特币引入并广泛应用于区块链技术中。它的目标是通过解决复杂的计算难题来证明节点在网络中做出了一定的工作量。</p>\n<p><strong>工作量证明算法的基本原理和过程：</strong></p>\n<ol>\n<li><p>难题设定：工作量证明算法首先定义一个难题，通常是一个哈希函数的计算难题。这个难题要求节点找到一个特定的输入（称为Nonce），通过对该输入进行哈希运算后得到的输出满足特定的条件，比如以一定数量的前导零开头。</p>\n</li>\n<li><p>计算工作量：节点通过不断尝试不同的Nonce值，将其与其他区块头数据进行哈希运算，得到哈希值。由于哈希函数的不可预测性，节点需要不断地尝试不同的Nonce值，直到找到一个满足条件的哈希值。</p>\n</li>\n<li><p>验证工作量：一旦节点找到了满足条件的哈希值，它将这个结果作为工作量证明，并将该结果与其他节点共享。其他节点可以很容易地验证这个工作量证明，只需将Nonce值与区块头数据进行哈希运算，验证结果是否符合要求。</p>\n</li>\n<li><p>区块添加：节点在找到有效的工作量证明后，将其打包成一个新的区块，并将该区块添加到区块链中。其他节点接受这个新区块，并进行验证和接续工作。</p>\n</li>\n<li><p>难度调整：为了维持区块链的出块速度稳定，工作量证明算法会根据网络中的总计算能力动态地调整难题的难度。如果总计算能力增加，难题的难度会增加，以保持平均每个区块产生的时间相对稳定。</p>\n</li>\n</ol>\n<div style=\"background-color:orange; color:white; border-radius: 4px; width:40px; text-align: center\">优点</div>\n<br>\n工作量证明算法通过计算密集型的难题来证明节点对网络的贡献，使得恶意行为者难以通过大量计算来控制网络。它的核心思想是\"耗时即代价\"，通过耗费计算能力和能源来保障系统的安全性。\n<br>\n<br>\n<div style=\"background-color:orange; color:white; border-radius: 4px; width:40px; text-align: center\">缺点</div>\n<br>\n\n<p>工作量证明算法也存在一些问题，如能源消耗较大、算力集中化、51%攻击等。因此，在一些新的区块链项目中，人们开始探索其他共识算法，如权益证明（Proof of Stake）和拜占庭容错（Byzantine Fault Tolerance）等，以改善这些问题并提升性能。</p>\n<h3 id=\"权益证明（Proof-of-Stake，PoS）\"><a href=\"#权益证明（Proof-of-Stake，PoS）\" class=\"headerlink\" title=\"权益证明（Proof of Stake，PoS）\"></a>权益证明（Proof of Stake，PoS）</h3><p>旨在解决工作量证明（Proof of Work，PoW）算法中存在的<code>能源消耗和算力集中化</code>的问题。在PoS中，节点的权益（通常是持有的加密货币数量）决定了其在网络中的权益和影响力。</p>\n<p><strong>权益证明算法的基本原理和过程：</strong></p>\n<ol>\n<li><p>参与者选择：在PoS中，网络中的参与者根据自己持有的加密货币数量选择成为验证节点。通常，持有更多加密货币的节点被选为验证节点的概率更高，因为他们具有更大的利益和动力来维护网络的安全和稳定。</p>\n</li>\n<li><p>区块生成：在PoS中，验证节点轮流获得创建新区块的权利，该权利与其持有的加密货币数量成正比。节点被选中后，它将创建新的区块并将其添加到区块链中。</p>\n</li>\n<li><p>区块验证：其他节点会验证新生成的区块的有效性，包括交易的正确性和符合规则等。如果区块被大多数节点接受和验证，则认为该区块是有效的，并将其添加到区块链中。</p>\n</li>\n<li><p>奖励机制：在PoS中，验证节点通过添加新区块和验证交易来获取奖励。奖励通常是新创建的加密货币，分配给参与验证和维护网络安全的节点。</p>\n</li>\n<li><p>选择分叉：如果存在多个验证节点几乎同时生成区块的情况，可能会导致分叉。在PoS中，分叉的解决方式通常是选择以持币量为依据的最长链原则，即选择持有更多加密货币的链作为有效链。</p>\n</li>\n</ol>\n<p>权益证明算法通过<code>基于节点的权益</code>来确定网络中的验证节点，减少了<code>能源消耗和算力竞争</code>，同时提高了<code>网络的抗攻击能力</code>。持币量较大的节点具有更高的概率被选中为验证节点，这也激励节点保持诚实行为，因为它们的权益与网络的稳定性和安全性直接相关。</p>\n<p>权益证明算法也面临<code>权益集中化、长期攻击等</code>问题。为了解决这些问题，一些改进的权益证明算法被提出，如委托权益证明（Delegated Proof of Stake，DPoS），它引入了代表节点的概念，由代表节点进行验证和区块生成。这些改进旨在提高网络的效率和安全性，同时保持去中心化的特性。</p>\n<h3 id=\"权益证明与权益投票（Delegated-Proof-of-Stake，DPoS）\"><a href=\"#权益证明与权益投票（Delegated-Proof-of-Stake，DPoS）\" class=\"headerlink\" title=\"权益证明与权益投票（Delegated Proof of Stake，DPoS）\"></a>权益证明与权益投票（Delegated Proof of Stake，DPoS）</h3>","more":"<h2 id=\"什么是共识算法\"><a href=\"#什么是共识算法\" class=\"headerlink\" title=\"什么是共识算法\"></a>什么是共识算法</h2><p>共识算法是在分布式系统中用于解决一致性问题的算法。在分布式系统中，多个节点协同工作以完成某个任务，但由于网络延迟、节点故障等原因，节点之间可能会出现数据不一致的情况。共识算法的目标是使得所有节点能够就某个数值或者状态达成一致意见。</p>\n<p>所谓共识，简单理解就是指大家都达成一致的意思。比如：开会讨论，双方或多方签订一份合作协议等。假设一群人开会，大家各抒己见，如何才能统一决定呢？一般在某一时间段就会选出一个人做汇总，然后发布完整的意见，这个时候所有参会的人投票表决，每个人都有机会来做汇总发表，最后谁的支持者多就以谁的最终意见为准。</p>\n<p>上面这种思路适合人数少的情况，如果有一百人、一千人、一万人参加会议，就很难通过这种方式投票决定了，效率太低。这时就需要通过一种机制筛选出最有代表性的人，在共识算法中就是筛选出具有代表性的节点。这种筛选条件就是共识算法。</p>\n<h2 id=\"常见的共识算法\"><a href=\"#常见的共识算法\" class=\"headerlink\" title=\"常见的共识算法\"></a>常见的共识算法</h2><h3 id=\"工作量证明（Proof-of-Work，PoW）\"><a href=\"#工作量证明（Proof-of-Work，PoW）\" class=\"headerlink\" title=\"工作量证明（Proof of Work，PoW）\"></a>工作量证明（Proof of Work，PoW）</h3><p>最早由比特币引入并广泛应用于区块链技术中。它的目标是通过解决复杂的计算难题来证明节点在网络中做出了一定的工作量。</p>\n<p><strong>工作量证明算法的基本原理和过程：</strong></p>\n<ol>\n<li><p>难题设定：工作量证明算法首先定义一个难题，通常是一个哈希函数的计算难题。这个难题要求节点找到一个特定的输入（称为Nonce），通过对该输入进行哈希运算后得到的输出满足特定的条件，比如以一定数量的前导零开头。</p>\n</li>\n<li><p>计算工作量：节点通过不断尝试不同的Nonce值，将其与其他区块头数据进行哈希运算，得到哈希值。由于哈希函数的不可预测性，节点需要不断地尝试不同的Nonce值，直到找到一个满足条件的哈希值。</p>\n</li>\n<li><p>验证工作量：一旦节点找到了满足条件的哈希值，它将这个结果作为工作量证明，并将该结果与其他节点共享。其他节点可以很容易地验证这个工作量证明，只需将Nonce值与区块头数据进行哈希运算，验证结果是否符合要求。</p>\n</li>\n<li><p>区块添加：节点在找到有效的工作量证明后，将其打包成一个新的区块，并将该区块添加到区块链中。其他节点接受这个新区块，并进行验证和接续工作。</p>\n</li>\n<li><p>难度调整：为了维持区块链的出块速度稳定，工作量证明算法会根据网络中的总计算能力动态地调整难题的难度。如果总计算能力增加，难题的难度会增加，以保持平均每个区块产生的时间相对稳定。</p>\n</li>\n</ol>\n<div style=\"background-color:orange; color:white; border-radius: 4px; width:40px; text-align: center\">优点</div>\n<br>\n工作量证明算法通过计算密集型的难题来证明节点对网络的贡献，使得恶意行为者难以通过大量计算来控制网络。它的核心思想是\"耗时即代价\"，通过耗费计算能力和能源来保障系统的安全性。\n<br>\n<br>\n<div style=\"background-color:orange; color:white; border-radius: 4px; width:40px; text-align: center\">缺点</div>\n<br>\n\n<p>工作量证明算法也存在一些问题，如能源消耗较大、算力集中化、51%攻击等。因此，在一些新的区块链项目中，人们开始探索其他共识算法，如权益证明（Proof of Stake）和拜占庭容错（Byzantine Fault Tolerance）等，以改善这些问题并提升性能。</p>\n<h3 id=\"权益证明（Proof-of-Stake，PoS）\"><a href=\"#权益证明（Proof-of-Stake，PoS）\" class=\"headerlink\" title=\"权益证明（Proof of Stake，PoS）\"></a>权益证明（Proof of Stake，PoS）</h3><p>旨在解决工作量证明（Proof of Work，PoW）算法中存在的<code>能源消耗和算力集中化</code>的问题。在PoS中，节点的权益（通常是持有的加密货币数量）决定了其在网络中的权益和影响力。</p>\n<p><strong>权益证明算法的基本原理和过程：</strong></p>\n<ol>\n<li><p>参与者选择：在PoS中，网络中的参与者根据自己持有的加密货币数量选择成为验证节点。通常，持有更多加密货币的节点被选为验证节点的概率更高，因为他们具有更大的利益和动力来维护网络的安全和稳定。</p>\n</li>\n<li><p>区块生成：在PoS中，验证节点轮流获得创建新区块的权利，该权利与其持有的加密货币数量成正比。节点被选中后，它将创建新的区块并将其添加到区块链中。</p>\n</li>\n<li><p>区块验证：其他节点会验证新生成的区块的有效性，包括交易的正确性和符合规则等。如果区块被大多数节点接受和验证，则认为该区块是有效的，并将其添加到区块链中。</p>\n</li>\n<li><p>奖励机制：在PoS中，验证节点通过添加新区块和验证交易来获取奖励。奖励通常是新创建的加密货币，分配给参与验证和维护网络安全的节点。</p>\n</li>\n<li><p>选择分叉：如果存在多个验证节点几乎同时生成区块的情况，可能会导致分叉。在PoS中，分叉的解决方式通常是选择以持币量为依据的最长链原则，即选择持有更多加密货币的链作为有效链。</p>\n</li>\n</ol>\n<p>权益证明算法通过<code>基于节点的权益</code>来确定网络中的验证节点，减少了<code>能源消耗和算力竞争</code>，同时提高了<code>网络的抗攻击能力</code>。持币量较大的节点具有更高的概率被选中为验证节点，这也激励节点保持诚实行为，因为它们的权益与网络的稳定性和安全性直接相关。</p>\n<p>权益证明算法也面临<code>权益集中化、长期攻击等</code>问题。为了解决这些问题，一些改进的权益证明算法被提出，如委托权益证明（Delegated Proof of Stake，DPoS），它引入了代表节点的概念，由代表节点进行验证和区块生成。这些改进旨在提高网络的效率和安全性，同时保持去中心化的特性。</p>\n<h3 id=\"权益证明与权益投票（Delegated-Proof-of-Stake，DPoS）\"><a href=\"#权益证明与权益投票（Delegated-Proof-of-Stake，DPoS）\" class=\"headerlink\" title=\"权益证明与权益投票（Delegated Proof of Stake，DPoS）\"></a>权益证明与权益投票（Delegated Proof of Stake，DPoS）</h3>","abbrlink":"3443d79c","categories":[{"name":"读书笔记","path":"api/categories/读书笔记.json"}],"tags":[{"name":"区块链","path":"api/tags/区块链.json"}]}